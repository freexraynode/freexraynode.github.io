<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freexraynode.github.io/news/article-89275.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Git基础Commit对象</title>
        <meta name="description" content="目录  1、Commit对象介绍 2、Commit对象说明 3、本地库中对象之间的关系 4、总结 5、练习 6、本文用到的命令总结   1、Commit对象介绍 现在来介绍最后一种Git对象commi" />
        <link rel="icon" href="/assets/website/img/freexraynode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Xray Node机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freexraynode.github.io/news/article-89275.htm" />
    <meta property="og:site_name" content="Free Xray Node机场节点官网" />
    <meta property="og:title" content="Git基础Commit对象" />
    <meta property="og:image" content="https://freexraynode.github.io/uploads/20240820-3/f223eb4099b776e178d089cd885c9966.webp" />
        <meta property="og:release_date" content="2025-04-05T08:21:23" />
    <meta property="og:updated_time" content="2025-04-05T08:21:23" />
        <meta property="og:description" content="目录  1、Commit对象介绍 2、Commit对象说明 3、本地库中对象之间的关系 4、总结 5、练习 6、本文用到的命令总结   1、Commit对象介绍 现在来介绍最后一种Git对象commi" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Git基础Commit对象">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/freexraynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-768TFY4KSC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-768TFY4KSC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                <span>Free Xray Node</span>
                                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-sm-3 mb-2">Git基础Commit对象</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- middle section -->
    <section class="w3l-servicesblock py-md-5 py-4">
        <div class="container pb-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="XRayNode每日订阅站" data-url="https://xraynode.github.io">
                  				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li><a href="#1commit%E5%AF%B9%E8%B1%A1%E4%BB%8B%E7%BB%8D" rel="nofollow">1、Commit对象介绍</a></li> <li><a href="#2commit%E5%AF%B9%E8%B1%A1%E8%AF%B4%E6%98%8E" rel="nofollow">2、Commit对象说明</a></li> <li><a href="#3%E6%9C%AC%E5%9C%B0%E5%BA%93%E4%B8%AD%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB" rel="nofollow">3、本地库中对象之间的关系</a></li> <li><a href="#4%E6%80%BB%E7%BB%93" rel="nofollow">4、总结</a></li> <li><a href="#5%E7%BB%83%E4%B9%A0" rel="nofollow">5、练习</a></li> <li><a href="#6%E6%9C%AC%E6%96%87%E7%94%A8%E5%88%B0%E7%9A%84%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93" rel="nofollow">6、本文用到的命令总结</a></li> </ul> </div> <h2 id="1commit对象介绍">1、Commit对象介绍</h2> <p>现在来介绍最后一种Git对象<code>commit</code>对象，也叫提交对象。</p> <p>提交对象可以理解为是对树对象的一层封装，提交信息包括基于当前暂存区中索引文件生成的<code>tree</code>对象，还有包含了提交时间，提交者信息，作者信息，以及提交备注等内容，更重要的是里面还包含了父提交的ID，由此就可以形成Git提交的有向无环图。（是链式的关系，把所有<code>commit</code>对象关联起来）</p> <p>即：<code>commit</code>对象通常指向一个<code>tree</code> 对象，并且封装了文件的提交时间，提交者信息，作者信息，提交备注，以及父提交引用等数据。</p> <p>下面是<code>commit</code>对象的存储结构：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/fc6cead3c6a12af6716c89a03a9186d6.jpg" alt="Git基础Commit对象"></p> <h2 id="2commit对象说明">2、Commit对象说明</h2> <p>我们通过练习来说明<code>commit</code>对象，接着用前面<code>Tree</code>对象的本地版本库。</p> <p><strong>（1）创建一个<code>commit</code>对象</strong></p> <p>我们可以通过调用<code>commit-tree</code>命令创建一个提交对象，为此需要指定一个树对象的<code>SHA-1</code>值，以及该提交的父提交对象。</p> <blockquote> <p>说明：使用<code>commit-tree</code>命令来创建提交对象，一般都需要和父提交进行关联，如果是第一次将暂存区的文件索引数据提交到本地版本库，那么该提交操作就不需要指定父提交对象。</p> </blockquote> <p><strong>1）我们可以先查看一下此时Git本地库中的对象，如下</strong>：</p> <pre><code class="language-bash">.git/objects/01/ab2a43b1eb150bcf00f375800727df240cf653 # 第三个tree树对象 .git/objects/0c/1e7391ca4e59584f8b773ecdbbb9467eba1547 # test.txt第二个版本（blob对象） .git/objects/16/3b45f0a0925b0655da232ea8a4188ccec615f5 # 第二个tree树对象 .git/objects/83/baae61804e65cc73a7201a7252750c76066a30 # test.txt第一个版本（blob对象） .git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # 第一个tree树对象 .git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # new.txt第一个版本（blob对象）</code></pre> <p><strong>2）我们通过第一个树对象，创建一个<code>commit</code>对象</strong></p> <pre><code class="language-bash"># 1.做提交操作，创建一个commit对象 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ echo 'first commit' | git commit-tree d8329f 3ceba95d3cd9cce982d31e41e3b995ece72f755d  # 2.确定该对象类型 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -t 3ceba95d3c commit  # 3.查看该对象内容 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -p 3ceba95d3c tree d8329fc1cc938780ffdd9f94e0d364e0ea74f579 author sun_wk &lt;sun_wk@126.com&gt; 1618190880 +0800 committer sun_wk &lt;sun_wk@126.com&gt; 1618190880 +0800  first commit</code></pre> <p>说明：</p> <ul> <li><code>tree</code>：表示该<code>commit</code>对象所指向的<code>tree</code>对象的索引</li> <li><code>author</code>：表示该文件的作者。</li> <li><code>committer</code>：表示该文件的提交者。</li> <li><code>first commit</code>：这段文本是提交备注。（备注与前面留空一行）</li> <li>因为是第一次进行<code>commit</code>提交操作，所以没有父提交信息。</li> <li><code>1618190880 +0800</code>：表示时间，一个时间戳。</li> </ul> <blockquote> <p>即：<code>commit</code>对象的格式很简单：指明了该时间点项目快照的顶层树对象、作者/提交者信息（从 Git 设置的<code>user.name</code>和<code>user.email</code>中获得)，以及当前时间戳、留空一行，最后是提交注释。</p> </blockquote> <blockquote> <p>提示：<code>git commit-tree</code>命令不但生成了提交对象，而且会将对应的快照（树对象）提交到本地库中。</p> </blockquote> <p><strong>（2）创建第二个<code>commit</code>对象</strong></p> <p>根据第二个<code>tree</code>对象和第一个<code>commit</code>对象，来创建第二个<code>commit</code>对象。</p> <p>通过<code>-p</code>选项指定父提交对象。</p> <pre><code class="language-bash"># 1.创建第二个commit对象 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ echo 'second commit' | git commit-tree 163b45f0a09 -p 3ceba95d3cd9cc 60e1c209e9de87314ec47cf28e61de8df5362fe6  # 2.查看该对象内容 L@DESKTOP-T2AI2SU MINGW64 /j/git-repository/git_learning (master) $ git cat-file -p 60e1c209e9de8 tree 163b45f0a0925b0655da232ea8a4188ccec615f5 parent 3ceba95d3cd9cce982d31e41e3b995ece72f755d author sun_wk &lt;sun_wk@126.com&gt; 1618193286 +0800 committer sun_wk &lt;sun_wk@126.com&gt; 1618193286 +0800  second commit</code></pre> <blockquote> <p><strong>提交对象的格式很简单：</strong></p> <p>它先指定一个顶层树对象，代表当前项目快照；</p> <p>然后是可能存在的父提交；</p> <p>之后是作者/提交者信息（依据你的<code>user.name</code> 和<code>user.email</code> 配置来设定，外加一个时间戳）；</p> <p>留空一行，最后是提交注释。</p> </blockquote> <p>第三个<code>commit</code>提交，同上，这里就不演示了。</p> <h2 id="3本地库中对象之间的关系">3、本地库中对象之间的关系</h2> <p>我们可以查看一下此时Git本地库中的对象</p> <pre><code class="language-bash">.git/objects/01/ab2a43b1eb150bcf00f375800727df240cf653 # 第三个tree树对象 .git/objects/0c/1e7391ca4e59584f8b773ecdbbb9467eba1547 # test.txt第二个版本（blob对象） .git/objects/16/3b45f0a0925b0655da232ea8a4188ccec615f5 # 第二个tree树对象 .git/objects/3c/eba95d3cd9cce982d31e41e3b995ece72f755d # 第一个commit提交对象 .git/objects/46/ab608799a0e65e970b67b9b52f6c1407c39036 # 第三个commit提交对象 .git/objects/60/e1c209e9de87314ec47cf28e61de8df5362fe6 # 第二个commit提交对象 .git/objects/83/baae61804e65cc73a7201a7252750c76066a30 # test.txt第一个版本（blob对象） .git/objects/d8/329fc1cc938780ffdd9f94e0d364e0ea74f579 # 第一个tree树对象 .git/objects/fa/49b077972391ad58037050f2a75f74e3671e92 # new.txt第一个版本（blob对象）</code></pre> <p>可以从上面看到，此时的本地版本库中共有9个对象，三个<code>blob</code>对象，三个<code>tree</code>对象，三个<code>commit</code>对象。</p> <p>他们之间的关系如下图：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/6e7381388ce04479de07f84404df9fe6.jpg" alt="Git基础Commit对象"></p> <h2 id="4总结">4、总结</h2> <ol> <li>提交是我们经常使用的Git动作，每次提交操作都指向一个树对象，同时会产生一个<code>commit</code>对象。<br /> 即：一个<code>commit</code>对象包含了一个<code>tree</code>对象，这个<code>tree</code>对象记录了在那个时间点，项目包含了什么文件夹和什么文件。</li> <li>一个提交对象可以有一个或者多个父提交。</li> <li>每次<code>commit</code>操作都会基于当前索引文件index新建<code>tree</code>对象。那么当前索引文件，是在上次提交的基础上更新来的，所以每次提交产生的<code>commit</code>对象，与其他的<code>commit</code>对象，都有前后关系或者称为父子关系。</li> <li>对于我们来说，不需要直接访问<code>blob</code>对象和<code>tree</code>对象，我们直接访问<code>commit</code>对象就可以了。<br /> 即：<code>commit</code>对象对应的<code>tree</code>对象下面，又包含了小的<code>tree</code>对象和<code>blob</code>对象，子的<code>tree</code>对象一层层展开，最后叶子节点就是一个个<code>blob</code>对象，也就是一个个文件。</li> </ol> <blockquote> <p>到这里，我们就能够清楚的了解，什么叫一个Git版本。<code>tree</code>对象才是一次项目版本的快照，提交对象是对<code>tree</code>对象的一次封装。</p> <p>即：</p> <ul> <li>项目的快照就是一个树对象。</li> <li>项目的版本就是一个提交对象。</li> </ul> <p>而且Git的每一个版本，存储的不是增量，而存储的是当前项目的快照。同时<code>objects</code>目录中相当于存放了项目的所有历史记录，回滚就相当的方便了，找到对应的<code>commit</code>对象的hash就可以了。</p> </blockquote> <h2 id="5练习">5、练习</h2> <p>请问下图中包含多少个<code>tree</code>对象和<code>blob</code>对象？</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/04824b7f00f79e7ae6f9a6a1ea8f2525.jpg" alt="Git基础Commit对象"></p> <p>一共包含两个<code>tree</code>对象，一个<code>blob</code>对象，一个<code>commit</code>对象。</p> <p>说明：</p> <ul> <li>一个<code>commit</code>对象一定对应一个<code>tree</code>对象（这个<code>tree</code>对象应该是一个完整项目仓库的快照）</li> <li><code>doc</code>目录下有一个<code>blob</code>对象，也就是<code>readme</code>文件。</li> </ul> <h2 id="6本文用到的命令总结">6、本文用到的命令总结</h2> <p>Git底层命令：</p> <ul> <li><code>git commit-tree</code>：生成一个<code>commit</code>对象。</li> <li><code>git cat-file -t 键</code>：查看Git对象的类型。</li> <li><code>git cat-file -p 键</code>：查看Git对象的内容。</li> </ul> <blockquote> <p>参考：</p> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/songyuequan/article/details/85862415"  target="_blank" rel="nofollow">https://blog.csdn.net/songyuequan/article/details/85862415</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/jasongrass/p/10582465.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/jasongrass/p/10582465.html</a></li> </ul> </blockquote> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-88528.htm">猫三联三针和两针的区别图片（猫三联三针一共多少钱）</a></p>
                                        <p>下一个：<a href="/news/article-89277.htm">给动物打疫苗要多少钱猫咪打的（猫打宠物疫苗多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-77932.htm" title="从0开始学VUE&#8211;使用Django+Vue 构建一个Web项目 登陆界面的实现">从0开始学VUE&#8211;使用Django+Vue 构建一个Web项目 登陆界面的实现</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-3-free-node-subscribe.htm" title="「3月3日」最高速度18.1M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月3日」最高速度18.1M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-winxray-node-github.htm" title="「3月2日」最高速度21.7M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月2日」最高速度21.7M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-free-subscribe-node.htm" title="「3月22日」最高速度18M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月22日」最高速度18M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-winxray-node-github.htm" title="「3月5日」最高速度22.2M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月5日」最高速度22.2M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-66678.htm" title="养猫对人的巨大危害图片（养猫咪对人的害处有哪些）">养猫对人的巨大危害图片（养猫咪对人的害处有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-26-winxray-node-github.htm" title="「3月26日」最高速度19.9M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月26日」最高速度19.9M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-winxray-node-share.htm" title="「3月4日」最高速度22.6M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「3月4日」最高速度22.6M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-87086.htm" title="华畜兽药是真的吗（华畜动物药业有限公司）">华畜兽药是真的吗（华畜动物药业有限公司）</a></li>
                        <li class="py-2"><a href="/news/article-73187.htm" title="猫打疫苗去诊所还是医院（猫打疫苗是去宠物店还是宠物医院）">猫打疫苗去诊所还是医院（猫打疫苗是去宠物店还是宠物医院）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //middle section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>Free Xray Node机场节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/freexraynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/freexraynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/freexraynode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- for testimonials carousel -->
    <script src="/assets/website/js/frontend/freexraynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: true
                },
                600: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: true,
                    loop: true
                }
            }
        })
    })
    </script>
    <!-- //for testimonials carousel -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/freexraynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>