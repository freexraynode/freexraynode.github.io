<!doctype html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://freexraynode.github.io/news/article-31400.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SpringBoot常用拦截器（HandlerInterceptor，ClientHttpRequestInterceptor，RequestInterceptor）</title>
        <meta name="description" content="SpringBoot常用拦截器（HandlerInterceptor，ClientHttpRequestInterceptor，RequestInterceptor）  上面3种拦截器，都是http拦" />
        <link rel="icon" href="/assets/website/img/freexraynode/favicon.ico" type="image/x-icon"/>
    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/freexraynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-768TFY4KSC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-768TFY4KSC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                                <a class="navbar-brand" href="/">
                    <span>Free Xray Node</span>
                </a>
                                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="#">关于</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">联系</a>
                        </li>
                    </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-sm-3 mb-2">SpringBoot常用拦截器（HandlerInterceptor，ClientHttpRequestInterceptor，RequestInterceptor）</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- middle section -->
    <section class="w3l-servicesblock py-md-5 py-4">
        <div class="container pb-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="XRayNode每日订阅站" data-url="https://xraynode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> <h4><a id="SpringBootHandlerInterceptorClientHttpRequestInterceptorRequestInterceptor_1" rel="nofollow"></a>SpringBoot常用拦截器（HandlerInterceptor，ClientHttpRequestInterceptor，RequestInterceptor）</h4> <blockquote> <p>上面3种拦截器，都是http拦截器，在处理业务逻辑之前对http请求信息进行处理，比如获取请求头，请求参数，设置请求头，请求参数等等</p> </blockquote> <p>思路清晰，先说jar包:</p> <p><code>HandlerInterceptor</code>—&gt;<code>spring-webmvc</code>项目，<code>org.springframework.web.servlet.HandlerInterceptor</code></p> <p><code>ClientHttpRequestInterceptor</code>—&gt;<code>spring-web</code>项目，<code>org.springframework.http.client.ClientHttpRequestInterceptor</code></p> <p><code>RequestInterceptor</code>—&gt;<code>feign-core</code>项目，<code>feign.RequestInterceptor</code></p> <p><strong>一目了然，从项目名称和包路径可以看出，3个拦截器分别属于3个不同的项目，所以他们之前的作用也有区别，在这里我大概讲一下3个拦截器的基本应用和区别：</strong></p> <p>3个拦截器的共同点，都是对http请求进行拦截，但是<code>http</code>请求的来源不同</p> <ul> <li><code>HandlerInterceptor</code>是最常规的，其拦截的<code>http</code>请求是来自于客户端浏览器之类的，是最常见的<code>http</code>请求拦截器；</li> <li><code>ClientHttpRequestInterceptor</code>是对<code>RestTemplate</code>的请求进行拦截的，在项目中直接使用<code>restTemplate.getForObject</code>的时候，会对这种请求进行拦截，经常被称为：<code>RestTempalte</code>拦截器或者<code>Ribbon</code>拦截器；</li> <li><code>RequestInterceptor</code>常被称为是<code>Feign</code>拦截器，由于<code>Feign</code>调用底层实际上还是<code>http</code>调用，因此也是一个<code>http</code>拦截器，在项目中使用Feign调用的时候，可以使用此拦截器；</li> </ul> <p></p> <h4><a id="HandlerInterceptor_27" rel="nofollow"></a>谈谈HandlerInterceptor</h4> <p>从包路径可以看出，这个是处理客户端<code>http servlet</code>请求的，此项目<code>spring-webmvc</code>与<code>spring-mvc</code>项目关闭密切，<code>HandlerInterceptor</code>可以对请求的各个阶段进行拦截，可以说是非常全面了。这个也是常规项目中用的最多的，对http请求进行拦截</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">HandlerInterceptor</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**前置处理：在业务处理器处理请求之前被调用*/</span><span class="token keyword">boolean</span><span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token comment">/**中置处理：在业务处理器处理请求执行完成后，生成视图之前执行。后处理（调用了Service并返回ModelAndView，但未进行页面渲染），有机会修改ModelAndView ，现在这个很少使用了*/</span><span class="token keyword">void</span><span class="token function">postHandle</span><span class="token punctuation">(</span> 			HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> ModelAndView modelAndView<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">;</span><span class="token comment">/**后置处理：在DispatcherServlet完全处理完请求后被调用，可用于清理资源等*/</span><span class="token keyword">void</span><span class="token function">afterCompletion</span><span class="token punctuation">(</span> 			HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">;</span></code></pre> <p><strong>使用示例</strong>（<code>HandlerInterceptorAdapter</code>实现了<code>HandlerInterceptor</code>接口）</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">TestFilter</span><span class="token keyword">extends</span><span class="token class-name">HandlerInterceptorAdapter</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">final</span> Logger logger<span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>TestFilter<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">boolean</span><span class="token function">preHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span> 		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"request请求地址path[{}] uri[{}]"</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getServletPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//request.getHeader(String) 从请求头中获取数据</span><span class="token comment">//从请求头中获取用户token（登陆凭证根据业务而定）</span> 		Long userId<span class="token operator">=</span><span class="token function">getUserId</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"H-User-Token"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>userId<span class="token operator">!=</span> null<span class="token operator">&amp;&amp;</span><span class="token function">checkAuth</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//这里的异常是我自定义的异常，系统抛出异常后框架捕获异常然后转为统一的格式返回给前端， 其实这里也可以返回false</span><span class="token keyword">throw</span><span class="token keyword">new</span><span class="token class-name">FastRuntimeException</span><span class="token punctuation">(</span><span class="token number">20001</span><span class="token punctuation">,</span><span class="token string">"No access"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> Long<span class="token function">getUserId</span><span class="token punctuation">(</span>String userToken<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 	Long userId<span class="token operator">=</span> null<span class="token punctuation">;</span><span class="token keyword">return</span> userId<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span><span class="token keyword">boolean</span><span class="token function">checkAuth</span><span class="token punctuation">(</span>Long userId<span class="token punctuation">,</span>String requestURI<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">postHandle</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> 					   ModelAndView modelAndView<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">afterCompletion</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">,</span> Object handler<span class="token punctuation">,</span> Exception ex<span class="token punctuation">)</span><span class="token keyword">throws</span> Exception<span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span></code></pre> <p>}</p> <h4><a id="ClientHttpRequestInterceptor_90" rel="nofollow"></a>谈谈ClientHttpRequestInterceptor</h4> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">ClientHttpRequestInterceptor</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**只有这一个方法，在项目中直接使用 restTemplate.getForObject 的时候，会对这种请求进行拦截*/</span>    ClientHttpResponse<span class="token function">intercept</span><span class="token punctuation">(</span>HttpRequest request<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> body<span class="token punctuation">,</span> ClientHttpRequestExecution execution<span class="token punctuation">)</span><span class="token keyword">throws</span> IOException<span class="token punctuation">;</span></code></pre> <p>使用示例（<code>SESSIONID</code>可以从<code>RequestContextHolder</code>中拿到）</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">RestClientHttpRequestInterceptor</span><span class="token keyword">implements</span><span class="token class-name">ClientHttpRequestInterceptor</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> ClientHttpResponse<span class="token function">intercept</span><span class="token punctuation">(</span>HttpRequest request<span class="token punctuation">,</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> body<span class="token punctuation">,</span> ClientHttpRequestExecution execution<span class="token punctuation">)</span><span class="token keyword">throws</span> IOException<span class="token punctuation">{<!-- --></span>         HttpHeaders headers<span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         headers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"Cookie"</span><span class="token punctuation">,</span><span class="token string">"SESSIONID=b8dd5bd9-9fb7-48cb-a86b-e079cb554fb8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"拦截器已添加header"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> execution<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p></p> <h4><a id="RequestInterceptor_116" rel="nofollow"></a>谈谈RequestInterceptor</h4> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">{<!-- --></span><span class="token comment">/**在项目中使用Feign调用的时候，可以使用此拦截器*/</span><span class="token keyword">void</span><span class="token function">apply</span><span class="token punctuation">(</span>RequestTemplate template<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>使用示例</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">FeignInterceptor</span><span class="token keyword">implements</span><span class="token class-name">RequestInterceptor</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span> String SESSIONID<span class="token operator">=</span><span class="token string">"SESSIONID"</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span> String SESSIONID_PREFIX<span class="token operator">=</span><span class="token string">"SESSIONID="</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span> String COOKIE<span class="token operator">=</span><span class="token string">"Cookie"</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">apply</span><span class="token punctuation">(</span>RequestTemplate requestTemplate<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             ServletRequestAttributes servletAttributes<span class="token operator">=</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span> RequestContextHolder<span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             HttpServletRequest httpServletRequest<span class="token operator">=</span> servletAttributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies<span class="token operator">=</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>Cookie cookie<span class="token operator">:</span> cookies<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>SESSIONID<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cookie<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>                     requestTemplate<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span>COOKIE<span class="token punctuation">,</span> SESSIONID_PREFIX<span class="token operator">+</span>cookie<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-31034.htm">人用针剂和兽用针剂有什么区别（兽用注射器和人用注射器有什么区别）</a></p>
                                        <p>下一个：<a href="/news/article-31401.htm">合肥哪里领养宠物狗狗 合肥哪里领养宠物狗狗的</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-24956.htm" title="动物疫苗的重要性和意义 动物疫苗的重要性和意义是什么">动物疫苗的重要性和意义 动物疫苗的重要性和意义是什么</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-13-winxray-github.htm" title="「11月13日」最高速度20M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「11月13日」最高速度20M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-14-winxray-node-share.htm" title="「9月14日」最高速度18.2M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「9月14日」最高速度18.2M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-19898.htm" title="给动物打疫苗的官方部门叫什么（动物打疫苗是干啥的）">给动物打疫苗的官方部门叫什么（动物打疫苗是干啥的）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-19-free-node-subscribe-links.htm" title="「10月19日」最高速度21M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「10月19日」最高速度21M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-12-node-share-links.htm" title="「9月12日」最高速度18.7M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「9月12日」最高速度18.7M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-30028.htm" title="在vue项目中配置使用svg">在vue项目中配置使用svg</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-11-node-share.htm" title="「10月11日」最高速度19.9M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「10月11日」最高速度19.9M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-28-winxray-node-github.htm" title="「8月28日」最高速度18.6M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「8月28日」最高速度18.6M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-free-subscribe-node.htm" title="「12月10日」最高速度19.3M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「12月10日」最高速度19.3M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //middle section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>Free Xray Node机场节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/freexraynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/freexraynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/freexraynode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- for testimonials carousel -->
    <script src="/assets/website/js/frontend/freexraynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: true
                },
                600: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: true,
                    loop: true
                }
            }
        })
    })
    </script>
    <!-- //for testimonials carousel -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/freexraynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>