<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freexraynode.github.io/news/article-60058.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控</title>
        <meta name="description" content="我们知道，应用系统最频繁，最主要的操作还是数据库的操作，所以数据库的性能和安全对于整个系统平台的重要性不言而喻。为了提高数据库性能，我们可以使用数据库连接池，有时候我们需要增加一些列的日志或是数据库性" />
        <link rel="icon" href="/assets/website/img/freexraynode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Xray Node机场节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freexraynode.github.io/news/article-60058.htm" />
    <meta property="og:site_name" content="Free Xray Node机场节点官网" />
    <meta property="og:title" content="Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控" />
    <meta property="og:image" content="https://freexraynode.github.io/uploads/20240820-3/de94de6c9bac705327262bda8c9a2ff5.webp" />
        <meta property="og:release_date" content="2025-02-20T09:58:17" />
    <meta property="og:updated_time" content="2025-02-20T09:58:17" />
        <meta property="og:description" content="我们知道，应用系统最频繁，最主要的操作还是数据库的操作，所以数据库的性能和安全对于整个系统平台的重要性不言而喻。为了提高数据库性能，我们可以使用数据库连接池，有时候我们需要增加一些列的日志或是数据库性" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="//fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/freexraynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-768TFY4KSC"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-768TFY4KSC');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand" href="/">
                                <span>Free Xray Node</span>
                                </a>
                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold mb-sm-3 mb-2">Druid数据库连接 | Spring Boot 集成 Druid实现数据库连接和完善的SQL执行监控</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><a href="/news/"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- middle section -->
    <section class="w3l-servicesblock py-md-5 py-4">
        <div class="container pb-2">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="XRayNode每日订阅站" data-url="https://xraynode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>我们知道，应用系统最频繁，最主要的操作还是数据库的操作，所以数据库的性能和安全对于整个系统平台的重要性不言而喻。为了提高数据库性能，我们可以使用数据库连接池，有时候我们需要增加一些列的日志或是数据库性能监控工具来确保数据库的性能，同时还得防范数据库的SQL注入等安全问题。</p> <p>所以，今天我们来介绍一款集数据库连接池、数据库监控、SQL执行日志于一身的神器：Druid。</p> </h1> <p> Druid 是阿里巴巴开源平台上的一个数据库连接池项目，它结合了 C3P0、DBCP 等数据库池的优点，同时加入了SQL日志和SQL性能监控的功能。可以很好的监控数据库池连接和 SQL 的执行情况，可以说是针对监控而生的数据库连接池框架。</p> <p>Druid 是目前比较流行的高性能的，分布式列存储的OLAP框架(具体来说是MOLAP)。它有如下几个特点：</p> <p>1、亚秒级查询：Druid提供了快速的聚合能力以及亚秒级的OLAP查询能力，多租户的设计，是面向用户分析应用的理想方式。</p> <p>2、实时数据注入：Druid支持流数据的注入，并提供了数据的事件驱动，保证在实时和离线环境下事件的实效性和统一性</p> <p>3、可扩展的PB级存储：Druid集群可以很方便的扩容到PB的数据量，每秒百万级别的数据注入。即便在加大数据规模的情况下，也能保证时其效性</p> <p>4、多环境部署：Druid既可以运行在商业的硬件上，也可以运行在云上。它可以从多种数据系统中注入数据，包括hadoop，spark，kafka，storm和samza等</p> <p>目前 Druid 已经在阿里巴巴部署了超过600个应用，经过生产环境大规模部署的严苛考验。</p> </h1> <p> Driud 同样对Spring Boot 提供了支持。为Spring Boot项目提供了druid-spring-boot-starter组件，可以帮助我们在Spring Boot项目中轻松集成Druid数据库连接池和监控。</p> <p>Github地址：&nbsp;https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter</p> <p>我们知道 Spring Boot 2.0 以上默认使用 Hikari 数据源，可以说 Hikari 与 Driud 是当前 Java Web 开发中最优秀的数据源。</p> </h1> <p> Druid 提供的druid-spring-boot-starter组件可以帮助我们在Spring Boot 项目中轻松集成Druid。下面通过示例演示如何在Spring Boot 项目中集成Druid。</p> <p><strong>1、引入依赖包</strong><br /> 修改pom.xml 文件，引入druid、jdbc等依赖包，具体如下所示：<br /> &nbsp;</p> <pre><code>&lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;         &lt;/dependency&gt;          &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;         &lt;/dependency&gt;                  &lt;!-- SPRINGBOOT DRUID --&gt;         &lt;dependency&gt;             &lt;groupId&gt;com.alibaba&lt;/groupId&gt;             &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;             &lt;version&gt;1.1.10&lt;/version&gt;         &lt;/dependency&gt;          &lt;!-- SPRINGBOOT JDBC --&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;         &lt;/dependency&gt;          &lt;!-- MYSQL --&gt;         &lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;         &lt;/dependency&gt; </code></pre> <p>上面的示例中，我们引入了druid、jdbc、mysql-connector等依赖组件，其中druid的组件包不是Spring Boot 提供，所以版本号与Spring Boot不一致，我们需要单独添加对应的版本号：1.1.10。</p> <p><strong>2、修改配置文件</strong><br /> 接下来，修改application.properties 配置文件，配置数据库连接，Druid等相关配置。具体如下所示：</p> <pre><code>spring.datasource.type=com.alibaba.druid.pool.DruidDataSource spring.datasource.url=jdbc:mysql://localhost:3306/druid_test?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true spring.datasource.username=root spring.datasource.password=root spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver  # 初始化最大、最⼩、最连接数 spring.datasource.druid.initial-size=3 spring.datasource.druid.min-idle=3 spring.datasource.druid.max-active=10 # 配置获取连接等待超时的时间 spring.datasource.druid.max-wait=60000 # 监控后台账号和密码 spring.datasource.druid.stat-view-servlet.login-username=admin spring.datasource.druid.stat-view-servlet.login-password=123456 # 配置 StatFilter spring.datasource.druid.filter.stat.log-slow-sql=true spring.datasource.druid.filter.stat.slow-sql-millis=2000 </code></pre> <p>上面的示例，我们配置了Mysql数据库连接，已经Druid的基础配置和后台监控的账号密码。通过此账号密码，即可登录Druid后台，查看SQL的执行情况。</p> <p><strong>3、运行验证</strong><br /> 前面这两步，我们就把druid集成到Spring Boot项目中了。启动项目访问地址： http://localhost:8080/druid，就会出现 Druid 监控后台的登录页面，输入前面配置的账户和密码后，就会进入首页。<br /> &nbsp;</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/61ab79d4db2bb1dd1501ff325e69ebac.jpg"></p> <p>通过上图可以看到，Druid展示了Spring Boot 项目中使用的 JDK 版本、数据库驱动、 JVM 等相关统计信息，同时还有，数据源、 SQL 监控、 SQL 防火墙、 URI 监控、Session监控等诸多监控功能。从这里也可以看出 Druid 的功能非常强大。</p> </h1> <p> 前面我们在Spring Boot项目中集成了Druid， 操作非常的简单，只需要添加依赖，简单配置即可实现。接下来我们通过Druid+jdbcTemplate实现数据库操作，演示Druid 是如何监控SQL执行的。</p> <p><strong>1、创建数据库及表</strong></p> <p> 首先，创建druid_test数据库和student 表。具体脚本如下：<br /> &nbsp;</p> <p>&nbsp;</p> <pre><code>CREATE TABLE `student` (   `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '主键id',   `name` varchar(32) DEFAULT NULL COMMENT '姓名',   `sex` int(11) DEFAULT NULL,   `age` int(11) DEFAULT NULL,   PRIMARY KEY (`id`) ) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;  -- ---------------------------- -- Records of student -- ---------------------------- INSERT INTO `student` VALUES ('3', 'zhangsan', '1', '20'); INSERT INTO `student` VALUES ('5', 'weiz多数据源', '0', '30'); INSERT INTO `student` VALUES ('6', 'weiz', '1', '30'); INSERT INTO `student` VALUES ('7', 'weiz2', '1', '30'); INSERT INTO `student` VALUES ('10', '李四', '0', '18'); INSERT INTO `student` VALUES ('11', 'weiz11', '1', '23'); </code></pre> <p><strong>2、创建Student实体类</strong></p> <p> 接下来，创建student表对应的Student实体类，示例代码如下：</p> <pre><code>public class Student {     private Long id;     private String name;     private int sex;     private int age;      public Student(){      }     public Student(String name, int sex, int age) {         this.name = name;         this.sex = sex;         this.age = age;     }      public Long getId() {         return id;     }      public void setId(Long id) {         this.id = id;     }     public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public int getSex() {         return sex;     }      public void setSex(int sex) {         this.sex = sex;     }      public int getAge() {         return age;     }      public void setAge(int age) {         this.age = age;     } } </code></pre> <p><strong>&nbsp;3、创建Service 及Impl实现</strong></p> <p> 创建数据库操作的方法StudentRepository及实现StudentRepositoryImpl。具体示例代码如下：</p> <pre><code>// StudentRepository public interface StudentRepository {     int save(Student user);     int update(Student user);     int delete(long id);     Student findById(long id); }  @Repository public class StudentRepositoryImpl implements StudentRepository {     @Autowired     private JdbcTemplate jdbcTemplate;      @Override     public int save(Student user) {         return jdbcTemplate.update("INSERT INTO Student(name, sex, age) values(?, ?, ?)",                 user.getName(), user.getSex(), user.getAge());     }      @Override     public int update(Student user) {         return jdbcTemplate.update("UPDATE Student SET name = ? , sex = ? , age = ?  WHERE id=?",user.getName(), user.getSex(), user.getAge(), user.getId());     }      @Override     public int delete(long id) {         return jdbcTemplate.update("DELETE FROM Student where id = ? ",id);     }      @Override     public Student findById(long id) {         return jdbcTemplate.queryForObject("SELECT * FROM Student WHERE id=?", new Object[] { id }, new BeanPropertyRowMapper&lt;Student&gt;(Student.class));     } } </code></pre> <p><strong>4、创建Controller调用</strong></p> <p> 最后，创建StudentController，并调用相关的数据操作方法。示例代码如下：&nbsp;</p> <pre><code>@RestController @RequestMapping("/student") public class StudentController {      @Autowired     StudentRepository studentRepository;      @RequestMapping("/findById/{id}")     public Student findById(@PathVariable Long id){         return studentRepository.findById(id);     } } </code></pre> <p><strong>5、运行验证</strong></p> <p>接下来，启动项目，验证jdbcTemplate 数据操作是否成功。访问地址： http://localhost:8080/student/findById/3, 查询学生信息。</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/5371fece1b70983b130e5cb5497a6f41.jpg"></p> <p>我们看到，后台成功返回了该学生的相关信息，接下来，我们在Druid中查看SQL的执行情况。通过http://localhost:8080/druid 进入监控后台，查看SQL的执行情况，具体如下图所示：</p> <p class="img-center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20221229/008770a12e1d793908aa0a2bede69eab.jpg"></p> <p>如上图所示，Druid的 SQL 监控会将项目中执行的所有SQL 打印出来，展示 SQL执行了多少次、每次返回多少数据、执行的时间分布是什么。这些功能非常的实用，方便我们在实际生产中查找出慢 SQL，最后对 SQL 进行调优。</p> <p><strong>最后</strong></p> <p> 以上，我们介绍了如何在Spring Boot 中集成Druid 实现数据库连接和监控的功能。然后通过Druid + jdbcTemplate 实现完整的数据操作。<span style="font-size: 16px;">&nbsp;</span></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-59480.htm">国产十大最好猫粮有那些（国产最出名的猫粮）</a></p>
                                        <p>下一个：<a href="/news/article-60059.htm">狗狗的领养协议（狗狗领养协议书范本）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-21692.htm" title="动物疫苗销售许可证如何办理 动物疫苗销售许可证如何办理流程">动物疫苗销售许可证如何办理 动物疫苗销售许可证如何办理流程</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-30-free-winxray-node.htm" title="「1月30日」最高速度19.4M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「1月30日」最高速度19.4M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-17-winxray-github.htm" title="「12月17日」最高速度23M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「12月17日」最高速度23M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-29-free-high-speed-nodes.htm" title="「1月29日」最高速度22.3M/S，2025年Free Xray Node每天更新免费机场订阅节点链接">「1月29日」最高速度22.3M/S，2025年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-32939.htm" title="宠物店利润和成本分析图（宠物店的利润率）">宠物店利润和成本分析图（宠物店的利润率）</a></li>
                        <li class="py-2"><a href="/news/article-36146.htm" title="nodejs的TCP相关的一些笔记">nodejs的TCP相关的一些笔记</a></li>
                        <li class="py-2"><a href="/news/article-33386.htm" title="动物打过狂犬疫苗人还需要打吗（动物打了狂犬疫苗还会得狂犬病吗）">动物打过狂犬疫苗人还需要打吗（动物打了狂犬疫苗还会得狂犬病吗）</a></li>
                        <li class="py-2"><a href="/news/article-48471.htm" title="PHP如何在同一文件中定义多个命名空间">PHP如何在同一文件中定义多个命名空间</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-10-free-subscribe-node.htm" title="「12月10日」最高速度19.3M/S，2024年Free Xray Node每天更新免费机场订阅节点链接">「12月10日」最高速度19.3M/S，2024年Free Xray Node每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-43679.htm" title="spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL">spark1.6.1和2.4读取csv文件，转为为DataFrame和使用SQL</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">60</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- //middle section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>Free Xray Node机场节点官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/freexraynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/freexraynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- magnific popup -->
    <script src="/assets/website/js/frontend/freexraynode/jquery.magnific-popup.min.js"></script>
    <script>
    $(document).ready(function() {
        $('.popup-with-zoom-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-zoom-in'
        });

        $('.popup-with-move-anim').magnificPopup({
            type: 'inline',

            fixedContentPos: false,
            fixedBgPos: true,

            overflowY: 'auto',

            closeBtnInside: true,
            preloader: false,

            midClick: true,
            removalDelay: 300,
            mainClass: 'my-mfp-slide-bottom'
        });
    });
    </script>
    <!-- //magnific popup -->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- for testimonials carousel -->
    <script src="/assets/website/js/frontend/freexraynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $("#owl-demo1").owlCarousel({
            loop: true,
            margin: 20,
            responsiveClass: true,
            responsive: {
                0: {
                    items: 1,
                    nav: true
                },
                600: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: true,
                    loop: true
                }
            }
        })
    })
    </script>
    <!-- //for testimonials carousel -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/freexraynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    <!-- //Js scripts -->
</body>

</html>